<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:icons="clr-namespace:Material.Icons.WPF;assembly=Material.Icons.WPF">

    <ControlTemplate x:Key="ToggleButtonTemplate" TargetType="{x:Type ToggleButton}">
        <Border CornerRadius="5" x:Name="PART_Border" Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" >
            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Right" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="LightSkyBlue" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="CornerRadius" Value="5 5 0 0" TargetName="PART_Border"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type ToggleButton}" x:Key="ToggleButtonStyle">
        <Setter Property="Template" Value="{StaticResource ToggleButtonTemplate}" />
    </Style>

    <Style TargetType="{x:Type ComboBox}" x:Key="ComboboxStyle">
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Border>
                        <Grid>
                            <ToggleButton Focusable="false" x:Name="PART_ToggleButton"
                                    IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                    ClickMode="Press" Style="{StaticResource ToggleButtonStyle}"
                                    Height="{Binding ActualHeight, RelativeSource={RelativeSource TemplatedParent}}"
                                    Width="{Binding ActualWidth, RelativeSource={RelativeSource TemplatedParent}}">
                                <ContentControl x:Name="ArrowIcon"
                                        Content="{icons:MaterialIconExt Kind=ExpandMore, Size=15}"
                                        HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <ContentControl.RenderTransform>
                                        <RotateTransform Angle="0" />
                                    </ContentControl.RenderTransform>
                                    <ContentControl.RenderTransformOrigin>0.5,0.5</ContentControl.RenderTransformOrigin>
                                </ContentControl>
                            </ToggleButton>
                            <ContentPresenter IsHitTestVisible="False" Content="{TemplateBinding SelectionBoxItem}"
                                    ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                    ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Margin="5"
                                    VerticalAlignment="Center" HorizontalAlignment="Left" />
                            <Popup Name="PART_Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}"
                                    Focusable="False" PopupAnimation="Slide" AllowsTransparency="True"
                                    Width="{Binding ActualWidth, RelativeSource={RelativeSource TemplatedParent}}">
                                <ScrollViewer Background="WhiteSmoke">
                                    <ItemsPresenter />
                                </ScrollViewer>
                            </Popup>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True" SourceName="PART_ToggleButton">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ArrowIcon"
                                                Storyboard.TargetProperty="(ContentControl.RenderTransform).(RotateTransform.Angle)"
                                                To="180" Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ArrowIcon"
                                                Storyboard.TargetProperty="(ContentControl.RenderTransform).(RotateTransform.Angle)"
                                                To="0" Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ComboBoxItem}" x:Key="CustomComboBoxItemStyle">
        <Setter Property="Background" Value="WhiteSmoke" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Border x:Name="Border" Background="{TemplateBinding Background}" CornerRadius="4" Padding="2" Margin="1">
                        <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="LightSkyBlue" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="LightSteelBlue" />
                            <Setter Property="FontWeight" Value="Bold" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>